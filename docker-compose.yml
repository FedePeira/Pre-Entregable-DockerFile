version: '3.8'  

x-airflow-common: &airflow-common  
  image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.9.2}  
  environment:  
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor  
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow  
    AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0  
    AIRFLOW__API__AUTH_BACKENDS: "airflow.api.auth.backend.basic"  
  volumes:  
    - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags  
    - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs  
    - ${AIRFLOW_PROJ_DIR:-.}/config:/opt/airflow/config  
    - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins  
  user: "${AIRFLOW_UID:-50000}:0"  
  depends_on:  
    redis:  
      condition: service_healthy  
    postgres:  
      condition: service_healthy  

services:  
  postgres:  
    image: postgres:13  
    environment:  
      POSTGRES_USER: airflow  
      POSTGRES_PASSWORD: airflow  
      POSTGRES_DB: airflow  
    volumes:  
      - postgres-db-volume:/var/lib/postgresql/data  
    healthcheck:  
      test: ["CMD", "pg_isready", "-U", "airflow"]  
      interval: 10s  
      retries: 5  
      start_period: 5s  
    restart: always  

  redis:  
    image: redis:7.2-bookworm  
    expose:  
      - 6379  
    healthcheck:  
      test: ["CMD", "redis-cli", "ping"]  
      interval: 10s  
      timeout: 30s  
      retries: 5  
      start_period: 30s  
    restart: always  

  airflow-webserver:  
    <<: *airflow-common  
    command: webserver  
    ports:  
      - "8080:8080"  
    healthcheck:  
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]  
      interval: 30s  
      timeout: 10s  
      retries: 5  
      start_period: 30s  
    restart: always  

  airflow-scheduler:  
    <<: *airflow-common  
    command: scheduler  
    healthcheck:  
      test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]  
      interval: 30s  
      timeout: 10s  
      retries: 5  
      start_period: 30s  
    restart: always  

  airflow-worker:  
    <<: *airflow-common  
    command: celery worker  
    healthcheck:  
      test: ["CMD-SHELL", "celery -A airflow worker inspect ping"]  
      interval: 30s  
      timeout: 10s  
      retries: 5  
      start_period: 30s  
    restart: always  

volumes:  
  postgres-db-volume:  